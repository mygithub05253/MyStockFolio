spring.application.name=backend
# --- Database Connection ---
# ?????? ?? URL (?? MySQL ??, ?????? ??: mystockfolio_db)
spring.datasource.url=jdbc:mysql://localhost:3306/mystockfolio_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul
# 데이터베이스 사용자 이름 (환경변수로 관리 권장)
spring.datasource.username=${DB_USERNAME:root}
# 데이터베이스 비밀번호 (환경변수로 관리 권장)
spring.datasource.password=${DB_PASSWORD:dongwon0525!}
# ??? JDBC ???? ???
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# --- JPA & Hibernate Settings ---
# ?????? ?? ? DB ??? ?? ??:
#   - none: ?? ?? ? ?
#   - validate: Entity? ??? ??? ??
#   - update: Entity ?? ??? DB ???? ??
#   - create: ?? ??? ?? ? ?? ??
#   - create-drop: ?????? ?? ? ??? ??
spring.jpa.hibernate.ddl-auto=update
# DB Dialect ?? (MySQL 8 ??)
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
# ???? SQL ??? ??? ???? ?? (?? ? ??)
spring.jpa.show-sql=true
# SQL ?? ??? ?? ?? ????? ??
spring.jpa.properties.hibernate.format_sql=true
# Entity ???? ?? ??(camelCase)? ??? ?? ??(snake_case)?? ?? ??
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# --- Server Port (Optional) ---
# ???? 8080
server.port=8080

# --- JWT Settings ---
# JWT 시크릿 키는 환경변수로 관리 (보안상 매우 중요!)
jwt.secret=${JWT_SECRET:yourVerySecretKeyWhichShouldBeLongAndSecureAndStoredSafelyOutsideCodebase}
# JWT 토큰 만료 시간 (밀리초, 예: 1시간)
jwt.expiration-ms=3600000

logging.level.org.springframework.security=DEBUG

# FastAPI (Market Data Service) ?? ?? (?? ?? ??)
# localhost:8001 ?? 127.0.0.1:8001 ?? (FastAPI? 8001 ?? ??)
market.data.url=http://127.0.0.1:8001

# --- OAuth2 Client Settings ---
# ⚠️ 보안상 민감한 정보는 환경변수로 관리합니다!
# 로컬 개발: backend/.env 파일에 설정 (Git에 커밋하지 않음)
# 발급 방법은 OAUTH2_SETUP_GUIDE.md 참고

# Google OAuth2
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:your-google-client-id}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:your-google-client-secret}
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth?prompt=select_account

# Naver OAuth2
spring.security.oauth2.client.registration.naver.client-id=${NAVER_CLIENT_ID:your-naver-client-id}
spring.security.oauth2.client.registration.naver.client-secret=${NAVER_CLIENT_SECRET:your-naver-client-secret}
spring.security.oauth2.client.registration.naver.scope=name,email
spring.security.oauth2.client.registration.naver.client-name=Naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# Naver Provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# Kakao OAuth2
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_CLIENT_ID:your-kakao-client-id}
spring.security.oauth2.client.registration.kakao.client-secret=${KAKAO_CLIENT_SECRET:your-kakao-client-secret}
spring.security.oauth2.client.registration.kakao.scope=
spring.security.oauth2.client.registration.kakao.client-name=Kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post

# Kakao Provider
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id